  # Proprietes de l'application
  spring:
    application:
      name: apigateway # nom de l'application
    cloud:
      # Configuration de l'API Gateway
      gateway:
        globalcors:
          cors-configurations:
            '[/**]':
              allowedOrigins: "*"
              allowedMethods:
                - "*"
                - GET
                - POST
                - DELETE
                - PUT
                - PATCH
                - OPTIONS
        discovery:
          locator:
            enabled: true #activation eureka locator
            lowerCaseServiceId: true
            # car le nom des services est en minuscule dans l'URL
        # Configuration des routes de l'API Gateway
        routes:
          #Service ACTIONNEUR
          - id: actionneur-service
            uri: lb://acactionneurs/ #Attention : lb et pas HTTP. Lb est prêt pour faire du load-balancing
            predicates:
              # On matche tout ce qui commence par /api/actionneurs
              - Path=/api/actionneurs/**
            filters:
              # On va réécrire l'URL pour enlever le /api/actionneurs
              - RewritePath=/api/actionneurs/(?<segment>.*), /$\\{segment}
          #Service CAPTEUR
          - id: capteur-service
            uri: lb://accapteurs/
            predicates:
              - Path=/api/capteurs/**
            filters:
              - RewritePath=/api/capteurs/(?<segment>.*), /$\\{segment}
          #Service RELEVE
          - id: releve-service
            uri: lb://acreleves/ #Attention : lb et pas HTTP. Lb est prêt pour faire du load-balancing
            predicates:
              # On matche tout ce qui commence par /api/releves
              - Path=/api/releves/**
            filters:
              # On va réécrire l'URL pour enlever le /api/releves
              - RewritePath=/api/releves/(?<segment>.*), /$\\{segment}
          #Service CAPTEUR-RELEVE
          - id: capteur-releve-composite
            uri: lb://accapteurreleves/
            predicates:
              - Path=/api/capteurreleve/**
            filters:
              - RewritePath=/api/capteurreleve/(?<segment>.*), /$\\{segment}
          #Service DATASCHEDULE
          - id: dataschedule-service
            uri: lb://acdataschedule/
            predicates:
              - Path=/api/dataschedules/**
            filters:
              - RewritePath=/api/dataschedules/(?<segment>.*), /$\\{segment}
          #Service UCA
          - id: uca-composite
            uri: lb://acuca/
            predicates:
            - Path=/api/uca/**
            filters:
            - RewritePath=/api/ucas/(?<segment>.*), /$\\{segment}
          #Service UTILISATEUR
          - id: utilisateur-service
            uri: lb://acutilisateurs/
            predicates:
            - Path=/api/utilisateurs/**
            filters:
            - RewritePath=/api/utilisateurs/(?<segment>.*), /$\\{segment}
          #Service Limiteur
          - id: limiteur-service
            uri: lb://aclimiteur/
            predicates:
            - Path=/api/limites/**
            filters:
            - RewritePath=/api/limiteurs/(?<segment>.*), /$\\{segment}
          #Service Statistique
          - id: statistique-service
            uri: lb://acstatistiques/
            predicates:
              - Path=/api/statistiques/**
            filters:
              - RewritePath=/api/statistiques/(?<segment>.*), /$\\{segment}
          #Service Historique
          - id: historique-service
            uri: lb://achistoriques/
            predicates:
              - Path=/api/historiques/**
            filters:
              - RewritePath=/api/historiques/(?<segment>.*), /$\\{segment}
        enabled: on # Activation gateway
      # Activation remontée management dans Eureka
      config:
        service-registry:
          auto-registration:
            register-management: on

  springdoc:
    api-docs:
      path: /api/swagger

  # Activation des endpoints pour le monitoring
  management:
    endpoints:
      web:
        exposure:
          include: env, health, info, metrics, loggers, mappings, prometheus
    tracing:
      sampling:
        probability: 1.0

  # Configuration client de l'annuaire
  # L'API Gateway va s'enregistrer comme un micro-service sur l'annuaire
  eureka:
    client:
      serviceUrl:
        defaultZone: http://localhost:8761/eureka/ # url d'accès à l'annuaire

  # Configuration du log.
  logging:
    level:
      org.springframework.web: INFO
      org.springframework.cloud.gateway: DEBUG
      reactor.netty: DEBUG
      reactor.netty.http.client: DEBUG # pour avoir plus d'infos sur les appels HTTP

  server:
      port: 10000
